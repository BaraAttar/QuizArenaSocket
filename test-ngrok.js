// test-ngrok.js - ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุนุจุฑ ngrok
const io = require("socket.io-client");
const jwt = require("jsonwebtoken");
require("dotenv").config();

// === ุงูุฅุนุฏุงุฏุงุช ===
// ููููู ุชุบููุฑ ูุฐุง ุงูุฑุงุจุท ุฅูู ุฑุงุจุท ngrok ุงูุฎุงุต ุจู
const NGROK_URL = process.env.NGROK_URL || "https://your-ngrok-url.ngrok.io";
const JWT_SECRET = process.env.JWT_SECRET;
const CONNECT_TIMEOUT_MS = 10000; // ุฒูุงุฏุฉ ููุช ุงูุงุชุตุงู

console.log(`๐ ูุญุงููุฉ ุงูุงุชุตุงู ุจู: ${NGROK_URL}`);

// ุฅูุดุงุก JWT token ููุงุฎุชุจุงุฑ
function createTestToken(userId) {
  return jwt.sign({ id: userId }, JWT_SECRET, { expiresIn: "1h" });
}

function testNgrokConnection(userID, roomID) {
  const token = createTestToken(userID);
  
  console.log(`๐ค ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ูููุณุชุฎุฏู: ${userID}`);
  
  const socket = io(NGROK_URL, {
    auth: { token },
    query: { roomID },
    transports: ["websocket", "polling"], // ุงูุณูุงุญ ุจููุง ุงูููุนูู
    timeout: CONNECT_TIMEOUT_MS,
    reconnection: true,
    reconnectionAttempts: 3,
    reconnectionDelay: 1000,
  });

  // === ุฃุญุฏุงุซ ุงูุงุชุตุงู ===
  socket.on("connect", () => {
    console.log("โ ุชู ุงูุงุชุตุงู ุจูุฌุงุญ!");
    console.log(`๐ Socket ID: ${socket.id}`);
    
    const user = jwt.verify(socket.auth.token, JWT_SECRET);
    console.log(`๐ค ุงููุณุชุฎุฏู: ${user.id}`);
    
    // ุฅุบูุงู ุงูุงุชุตุงู ุจุนุฏ ุซุงููุชูู
    setTimeout(() => {
      console.log("๐ ุฅุบูุงู ุงูุงุชุตุงู...");
      socket.close();
      process.exit(0);
    }, 2000);
  });

  socket.on("connect_error", (error) => {
    console.error("โ ุฎุทุฃ ูู ุงูุงุชุตุงู:", error.message);
    console.log("๐ก ุชุฃูุฏ ูู:");
    console.log("   1. ุฃู ุงูุณูุฑูุฑ ูุนูู ุนูู ุงููููุฐ 8080");
    console.log("   2. ุฃู ngrok ูุนูู ุจุดูู ุตุญูุญ");
    console.log("   3. ุฃู ุฑุงุจุท ngrok ุตุญูุญ");
    process.exit(1);
  });

  socket.on("joined-room", (data) => {
    if (data.status === 200) {
      console.log("โ ุงูุถู ููุบุฑูุฉ ุจูุฌุงุญ:", data.message);
    }
  });

  socket.on("disconnect", (reason) => {
    console.log("๐ ุชู ูุทุน ุงูุงุชุตุงู:", reason);
  });

  socket.on("reconnect", (attemptNumber) => {
    console.log(`๐ ุฅุนุงุฏุฉ ุงูุงุชุตุงู - ุงููุญุงููุฉ ${attemptNumber}`);
  });

  socket.on("reconnect_error", (error) => {
    console.error("โ ุฎุทุฃ ูู ุฅุนุงุฏุฉ ุงูุงุชุตุงู:", error.message);
  });
}

// ุงุฎุชุจุงุฑ ุงูุงุชุตุงู
testNgrokConnection("TestUser", "test-room-123");

// ุฅุถุงูุฉ ูุนุงูุฌ ูุฅููุงู ุงูุจุฑูุงูุฌ
process.on('SIGINT', () => {
  console.log('\n๐ ุฅููุงู ุงูุงุฎุชุจุงุฑ...');
  process.exit(0);
});
